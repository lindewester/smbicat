\NeedsTeXFormat{LaTeX2e}[1999/01/01]
\ProvidesPackage{2cptikz}
\RequirePackage{tikz}

\usetikzlibrary{trees}
\usetikzlibrary{topaths}
\usetikzlibrary{decorations}
\usetikzlibrary{decorations.pathreplacing}
\usetikzlibrary{decorations.pathmorphing}
\usetikzlibrary{decorations.markings}
\usetikzlibrary{matrix,backgrounds,folding}
\usetikzlibrary{chains,scopes,positioning,fit}
\usetikzlibrary{arrows,shadows}
\usetikzlibrary{calc} 
\usetikzlibrary{chains}
\usetikzlibrary{shapes,shapes.geometric,shapes.misc}


\newenvironment{pic}[1][]
{\begin{aligned}\begin{tikzpicture}[#1]}
{\end{tikzpicture}\end{aligned}}


\makeatletter
\def\calign@preamble{%
   &\hfil\strut@
    \setboxz@h{\@lign$\m@th\displaystyle{##}$}%
    \ifmeasuring@\savefieldlength@\fi
    \set@field
    \hfil
    \tabskip\alignsep@
}
\let\cmeasure@\measure@
%\patchcmd\cmeasure@{\divide\@tempcntb\tw@}{}{}{}
%\patchcmd\cmeasure@{\divide\@tempcntb\tw@}{}{}{}
%\patchcmd\cmeasure@{\ifodd\maxfields@
%  \global\advance\maxfields@\@ne
%  \fi}{}{}{}    
\newenvironment{calign}
{%
  \let\align@preamble\calign@preamble
  \let\measure@\cmeasure@
  \align
}
{%
  \endalign
}  
\makeatother



\pgfdeclarelayer{edgelayer}
\pgfdeclarelayer{nodelayer}
\pgfdeclarelayer{foreground}
\pgfdeclarelayer{background}
\pgfsetlayers{background,edgelayer,nodelayer,main,foreground,background}


%\def\fillClight{blue!40}
\def\fillClight{gray!40}


\tikzstyle{dot}=[inner sep=0.7mm,minimum width=0pt,minimum height=0pt,fill=black,draw=black,shape=circle]
\tikzstyle{black dot}=[dot,fill=black]
\tikzstyle{white dot}=[dot,fill=white]
\tikzstyle{gray dot}=[dot,fill=gray!40!white]
\tikzstyle{morphism}=[rectangle,fill=white,draw=black,minimum height=6mm,minimum width=7mm,font=\small]






% Styles
\makeatletter
\pgfkeys{%
  /tikz/on layer/.code={
    \pgfonlayer{#1}\begingroup
    \aftergroup\endpgfonlayer
    \aftergroup\endgroup
  },
  /tikz/node on layer/.code={
    \gdef\node@@on@layer{%
      \setbox\tikz@tempbox=\hbox\bgroup\pgfonlayer{#1}\unhbox\tikz@tempbox\endpgfonlayer\egroup}
    \aftergroup\node@on@layer
  },
  /tikz/end node on layer/.code={
    \endpgfonlayer\endgroup\endgroup
  }
}
\def\node@on@layer{\aftergroup\node@@on@layer}
\makeatother\def\thickness{0.7pt}
\tikzstyle{oldmorphism}=[minimum width=30pt, minimum height=16pt, draw, font=\small, inner sep=0pt, fill=white, line width=\thickness]
\tikzstyle{cross}=[preaction={draw=white, -, line width=10pt}]
%\tikzstyle{braid}=[preaction={draw=white, -, line width=8pt}, line width=\thickness]
\tikzstyle{braid}=[double=black, line width=3*\thickness, double distance=\thickness, white]
\tikzstyle{string}=[line width=\thickness]
\tikzstyle{scalar}=[circle, inner sep=0pt, minimum width=15pt, draw, line width=\thickness]
\tikzstyle{dot}=[circle, draw=black, fill=black!25, inner sep=.4ex, line width=\thickness, node on layer=foreground]
\tikzstyle{blackdot}=[circle, draw=black, fill=black!50, inner sep=.4ex, line width=\thickness, node on layer=foreground]
\tikzstyle{whitedot}=[circle, draw=black, fill=white, inner sep=.4ex, line width=\thickness, node on layer=foreground]
\tikzstyle{mixedmorphism}=[morphism, minimum width=30pt, minimum height=16pt, draw, font=\small, inner sep=0pt, fill=white, line width=\thickness,rounded corners=1ex]
\tikzstyle{thick}=[line width=\thickness]
\tikzstyle{tiny}=[font=\tiny]

% Arrows
\tikzset{arrow/.style={decoration={
    markings,
    mark=at position #1 with \arrow{thickarrow}},
    postaction=decorate}
}
\tikzset{reverse arrow/.style={decoration={
    markings,
    mark=at position #1 with \arrow{reversethickarrow}},
    postaction=decorate}
}

% Keys
\newif\ifblack\pgfkeys{/tikz/black/.is if=black}
\newif\ifwedge\pgfkeys{/tikz/wedge/.is if=wedge}
\newif\ifvflip\pgfkeys{/tikz/vflip/.is if=vflip}
\newif\ifhflip\pgfkeys{/tikz/hflip/.is if=hflip}
\newif\ifhvflip\pgfkeys{/tikz/hvflip/.is if=hvflip}
\newif\ifconnectnw\pgfkeys{/tikz/connect nw/.is if=connectnw}
\newif\ifconnectne\pgfkeys{/tikz/connect ne/.is if=connectne}
\newif\ifconnectsw\pgfkeys{/tikz/connect sw/.is if=connectsw}
\newif\ifconnectse\pgfkeys{/tikz/connect se/.is if=connectse}
\newif\ifconnectn\pgfkeys{/tikz/connect n/.is if=connectn}
\newif\ifconnects\pgfkeys{/tikz/connect s/.is if=connects}
\newif\ifconnectnwf\pgfkeys{/tikz/connect nw >/.is if=connectnwf}
\newif\ifconnectnef\pgfkeys{/tikz/connect ne >/.is if=connectnef}
\newif\ifconnectswf\pgfkeys{/tikz/connect sw >/.is if=connectswf}
\newif\ifconnectsef\pgfkeys{/tikz/connect se >/.is if=connectsef}
\newif\ifconnectnf\pgfkeys{/tikz/connect n >/.is if=connectnf}
\newif\ifconnectsf\pgfkeys{/tikz/connect s >/.is if=connectsf}
\newif\ifconnectnwr\pgfkeys{/tikz/connect nw </.is if=connectnwr}
\newif\ifconnectner\pgfkeys{/tikz/connect ne </.is if=connectner}
\newif\ifconnectswr\pgfkeys{/tikz/connect sw </.is if=connectswr}
\newif\ifconnectser\pgfkeys{/tikz/connect se </.is if=connectser}
\newif\ifconnectnr\pgfkeys{/tikz/connect n </.is if=connectnr}
\newif\ifconnectsr\pgfkeys{/tikz/connect s </.is if=connectsr}
\tikzset{keylengthnw/.initial=\connectheight}
\tikzset{keylengthn/.initial =\connectheight}
\tikzset{keylengthne/.initial=\connectheight}
\tikzset{keylengthsw/.initial=\connectheight}
\tikzset{keylengths/.initial =\connectheight}
\tikzset{keylengthse/.initial=\connectheight}
\tikzset{connect nw length/.style={connect nw=true, keylengthnw={#1}}}
\tikzset{connect n length/.style ={connect n =true, keylengthn ={#1}}}
\tikzset{connect ne length/.style={connect ne=true, keylengthne={#1}}}
\tikzset{connect sw length/.style={connect sw=true, keylengthsw={#1}}}
\tikzset{connect s length/.style ={connect s =true, keylengths ={#1}}}
\tikzset{connect se length/.style={connect se=true, keylengthse={#1}}}
\tikzset{connect nw < length/.style={connect nw <=true, keylengthnw={#1}}}
\tikzset{connect n < length/.style ={connect n <=true,  keylengthn ={#1}}}
\tikzset{connect ne < length/.style={connect ne <=true, keylengthne={#1}}}
\tikzset{connect sw < length/.style={connect sw <=true, keylengthnw={#1}}}
\tikzset{connect s < length/.style ={connect s <=true,  keylengths ={#1}}}
\tikzset{connect se < length/.style={connect se <=true, keylengthse={#1}}}
\tikzset{connect nw > length/.style={connect nw >=true, keylengthnw={#1}}}
\tikzset{connect n > length/.style ={connect n >=true,  keylengthn ={#1}}}
\tikzset{connect ne > length/.style={connect ne >=true, keylengthne={#1}}}
\tikzset{connect sw > length/.style={connect sw >=true, keylengthsw={#1}}}
\tikzset{connect s > length/.style ={connect s >=true,  keylengths ={#1}}}
\tikzset{connect se > length/.style={connect se >=true, keylengthse={#1}}}

% Lengths
\newlength\morphismheight
\setlength\morphismheight{0.6cm}
\newlength\minimummorphismwidth
\setlength\minimummorphismwidth{0.6cm}
\newlength\stateheight
\setlength\stateheight{0.6cm}
\newlength\minimumstatewidth
\setlength\minimumstatewidth{0.89cm}
\newlength\connectheight
\setlength\connectheight{0.5cm}
\tikzset{width/.initial=\minimummorphismwidth}

% Custom arrowhead
\makeatletter
\pgfarrowsdeclare{thickarrow}{thickarrow}
{
  \pgfutil@tempdima=-0.84pt%
  \advance\pgfutil@tempdima by-1.3\pgflinewidth%
  \pgfutil@tempdimb=-1.7pt%
  \advance\pgfutil@tempdimb by.625\pgflinewidth%
  \pgfarrowsleftextend{+\pgfutil@tempdima}
  \pgfarrowsrightextend{+\pgfutil@tempdimb}
}
{
  \pgfmathparse{\pgfgetarrowoptions{thickarrow}}%
  \pgfsetlinewidth{1.25 pt}
  \pgfutil@tempdima=0.28pt%
  \advance\pgfutil@tempdima by.3\pgflinewidth%
  \pgfsetlinewidth{0.8\pgflinewidth}
  \pgfsetdash{}{+0pt}
  \pgfsetroundcap
  \pgfsetroundjoin
  \pgfpathmoveto{\pgfqpoint{-3\pgfutil@tempdima}{4\pgfutil@tempdima}}
  \pgfpathcurveto
  {\pgfqpoint{-2.75\pgfutil@tempdima}{2.5\pgfutil@tempdima}}
  {\pgfqpoint{0pt}{0.25\pgfutil@tempdima}}
  {\pgfqpoint{0.75\pgfutil@tempdima}{0pt}}
  \pgfpathcurveto
  {\pgfqpoint{0pt}{-0.25\pgfutil@tempdima}}
  {\pgfqpoint{-2.75\pgfutil@tempdima}{-2.5\pgfutil@tempdima}}
  {\pgfqpoint{-3\pgfutil@tempdima}{-4\pgfutil@tempdima}}
  \pgfusepathqstroke
}
\pgfarrowsdeclare{reversethickarrow}{reversethickarrow}
{
  \pgfutil@tempdima=-0.84pt%
  \advance\pgfutil@tempdima by-1.3\pgflinewidth%
  \pgfutil@tempdimb=0.2pt%
  \advance\pgfutil@tempdimb by.625\pgflinewidth%
  \pgfarrowsleftextend{+\pgfutil@tempdima}
  \pgfarrowsrightextend{+\pgfutil@tempdimb}
}
{
  \pgftransformxscale{-1}
  \pgfmathparse{\pgfgetarrowoptions{thickarrow}}%
  \ifpgfmathunitsdeclared%
    \pgfmathparse{\pgfmathresult pt}%
  \else%  
    \pgfmathparse{\pgfmathresult*\pgflinewidth}%
  \fi%
  \let\thickness=\pgfmathresult
  \pgfsetlinewidth{1.25 pt}
  \pgfutil@tempdima=0.28pt%
  \advance\pgfutil@tempdima by.3\pgflinewidth%
  \pgfsetlinewidth{0.8\pgflinewidth}
  \pgfsetdash{}{+0pt}
  \pgfsetroundcap
  \pgfsetroundjoin
  \pgfpathmoveto{\pgfqpoint{-3\pgfutil@tempdima}{4\pgfutil@tempdima}}
  \pgfpathcurveto
  {\pgfqpoint{-2.75\pgfutil@tempdima}{2.5\pgfutil@tempdima}}
  {\pgfqpoint{0pt}{0.25\pgfutil@tempdima}}
  {\pgfqpoint{0.75\pgfutil@tempdima}{0pt}}
  \pgfpathcurveto
  {\pgfqpoint{0pt}{-0.25\pgfutil@tempdima}}
  {\pgfqpoint{-2.75\pgfutil@tempdima}{-2.5\pgfutil@tempdima}}
  {\pgfqpoint{-3\pgfutil@tempdima}{-4\pgfutil@tempdima}}
  \pgfusepathqstroke
}
\makeatother

% Shapes
\makeatletter
\pgfdeclareshape{ground}
{
    \savedanchor\centerpoint
    {
        \pgf@x=0pt
        \pgf@y=0pt
    }
    \anchor{center}{\centerpoint}
    \anchorborder{\centerpoint}
    % \saveddimen\myscale
    % {
    %   \pgfkeysgetvalue{/pgf/scale}{\minwidth}
    %   \pgf@x=\minwidth
    % }
    \anchor{north}
    {
        \pgf@x=0pt
        \pgf@y=0.5*0.33*\stateheight
    }
    \anchor{south}
    {
        \pgf@x=0pt
        \pgf@y=0pt
    }
    \saveddimen\overallwidth
    {
        \pgfkeysgetvalue{/pgf/minimum width}{\minwidth}
        \pgf@x=\minimumstatewidth
        \ifdim\pgf@x<\minwidth
            \pgf@x=\minwidth
        \fi
    }
    \backgroundpath
    {
        \begin{pgfonlayer}{foreground}
        \pgfsetstrokecolor{black}
        \pgfsetlinewidth{1.25pt}
        \ifhflip
            \pgftransformyscale{-1}
        \fi
        \pgftransformscale{0.5}
        \pgfpathmoveto{\pgfpoint{-0.5*\overallwidth}{0}}
        \pgfpathlineto{\pgfpoint{0.5*\overallwidth}{0}}
        \pgfpathmoveto{\pgfpoint{-0.33*\overallwidth}{0.33*\stateheight}}
        \pgfpathlineto{\pgfpoint{0.33*\overallwidth}{0.33*\stateheight}}
        \pgfpathmoveto{\pgfpoint{-0.16*\overallwidth}{0.66*\stateheight}}
        \pgfpathlineto{\pgfpoint{0.16*\overallwidth}{0.66*\stateheight}}
        \pgfpathmoveto{\pgfpoint{-0.02*\overallwidth}{\stateheight}}
        \pgfpathlineto{\pgfpoint{0.02*\overallwidth}{\stateheight}}
        \pgfusepath{stroke}
        \end{pgfonlayer}
    }
}
\tikzset{forward arrow style/.style={every to/.style, decoration={
    markings,
    mark=at position 0.5 with \arrow{thickarrow}},
    postaction=decorate}}
\tikzset{reverse arrow style/.style={every to/.style, decoration={
    markings,
    mark=at position 0.5 with \arrow{reversethickarrow}},
    postaction=decorate}}
\pgfdeclareshape{morphism}
{
    \savedanchor\centerpoint
    {
        \pgf@x=0pt
        \pgf@y=0pt
    }
    \anchor{center}{\centerpoint}
    \anchorborder{\centerpoint}
    \saveddimen\savedlengthnw
    {
        \pgfkeysgetvalue{/tikz/keylengthnw}{\len}
        \pgf@x=\len
    }
    \saveddimen\savedlengthn
    {
        \pgfkeysgetvalue{/tikz/keylengthn}{\len}
        \pgf@x=\len
    }
    \saveddimen\savedlengthne
    {
        \pgfkeysgetvalue{/tikz/keylengthne}{\len}
        \pgf@x=\len
    }
    \saveddimen\savedlengthsw
    {
        \pgfkeysgetvalue{/tikz/keylengthsw}{\len}
        \pgf@x=\len
    }
    \saveddimen\savedlengths
    {
        \pgfkeysgetvalue{/tikz/keylengths}{\len}
        \pgf@x=\len
    }
    \saveddimen\savedlengthse
    {
        \pgfkeysgetvalue{/tikz/keylengthse}{\len}
        \pgf@x=\len
    }
    \saveddimen\overallwidth
    {
        \pgfkeysgetvalue{/tikz/width}{\minwidth}
        \pgf@x=\wd\pgfnodeparttextbox
        \ifdim\pgf@x<\minwidth
            \pgf@x=\minwidth
        \fi
    }
    \savedanchor{\upperrightcorner}
    {
        \pgf@y=.5\ht\pgfnodeparttextbox
        \advance\pgf@y by -.5\dp\pgfnodeparttextbox
        \pgf@x=.5\wd\pgfnodeparttextbox
    }
    \anchor{north}
    {
        \pgf@x=0pt
        \pgf@y=0.5\morphismheight
    }
    \anchor{north east}
    {
        \pgf@x=\overallwidth
        \multiply \pgf@x by 2
        \divide \pgf@x by 5
        \pgf@y=0.5\morphismheight
    }
    \anchor{east}
    {
        \pgf@x=\overallwidth
        \divide \pgf@x by 2
        \advance \pgf@x by 5pt
        \pgf@y=0pt
    }
    \anchor{west}
    {
        \pgf@x=-\overallwidth
        \divide \pgf@x by 2
        \advance \pgf@x by -5pt
        \pgf@y=0pt
    }
    \anchor{north west}
    {
        \pgf@x=-\overallwidth
        \multiply \pgf@x by 2
        \divide \pgf@x by 5
        \pgf@y=0.5\morphismheight
    }
    \anchor{connect nw}
    {
        \pgf@x=-\overallwidth
        \multiply \pgf@x by 2
        \divide \pgf@x by 5
        \pgf@y=0.5\morphismheight
        \advance\pgf@y by \savedlengthnw
    }
    \anchor{connect ne}
    {
        \pgf@x=\overallwidth
        \multiply \pgf@x by 2
        \divide \pgf@x by 5
        \pgf@y=0.5\morphismheight
        \advance\pgf@y by \savedlengthne
    }
    \anchor{connect sw}
    {
        \pgf@x=-\overallwidth
        \multiply \pgf@x by 2
        \divide \pgf@x by 5
        \pgf@y=-0.5\morphismheight
        \advance\pgf@y by -\savedlengthsw
    }
    \anchor{connect se}
    {
        \pgf@x=\overallwidth
        \multiply \pgf@x by 2
        \divide \pgf@x by 5
        \pgf@y=-0.5\morphismheight
        \advance\pgf@y by -\savedlengthse
    }
    \anchor{connect n}
    {
        \pgf@x=0pt
        \pgf@y=0.5\morphismheight
        \advance\pgf@y by \savedlengthn
    }
    \anchor{connect s}
    {
        \pgf@x=0pt
        \pgf@y=-0.5\morphismheight
        \advance\pgf@y by -\savedlengths
    }
    \anchor{south east}
    {
        \pgf@x=\overallwidth
        \multiply \pgf@x by 2
        \divide \pgf@x by 5
        \pgf@y=-0.5\morphismheight
    }
    \anchor{south west}
    {
        \pgf@x=-\overallwidth
        \multiply \pgf@x by 2
        \divide \pgf@x by 5
        \pgf@y=-0.5\morphismheight
    }
    \anchor{south}
    {
        \pgf@x=0pt
        \pgf@y=-0.5\morphismheight
    }
    \anchor{text}
    {
        \upperrightcorner
        \pgf@x=-\pgf@x
        \pgf@y=-\pgf@y
    }
    \backgroundpath
    {
        \pgfsetstrokecolor{black}
        \pgfsetlinewidth{\thickness}
        \begin{scope}
                \ifhflip
                    \pgftransformyscale{-1}
                \fi
                \ifvflip
                    \pgftransformxscale{-1}
                \fi
                \ifhvflip
                    \pgftransformxscale{-1}
                    \pgftransformyscale{-1}
                \fi
                \pgfpathmoveto{\pgfpoint
                    {-0.5*\overallwidth-5pt}
                    {0.5*\morphismheight}}
                \pgfpathlineto{\pgfpoint
                    {0.5*\overallwidth+5pt}
                    {0.5*\morphismheight}}
                \ifwedge
                    \pgfpathlineto{\pgfpoint
                        {0.5*\overallwidth + 15pt}
                        {-0.5*\morphismheight}}
                \else
                    \pgfpathlineto{\pgfpoint
                        {0.5*\overallwidth + 5pt}
                        {-0.5*\morphismheight}}
                \fi
                \pgfpathlineto{\pgfpoint
                    {-0.5*\overallwidth-5pt}
                    {-0.5*\morphismheight}}
                \pgfpathclose
                \pgfusepath{stroke}
        \end{scope}
        \ifconnectnw
            \pgfpathmoveto{\pgfpoint
                {-0.4*\overallwidth}
                {0.5*\morphismheight}}
            \pgfpathlineto{\pgfpoint
                {-0.4*\overallwidth}
                {0.5*\morphismheight+\savedlengthnw}}
            \pgfusepath{stroke}
        \fi
        \ifconnectne
            \pgfpathmoveto{\pgfpoint
                {0.4*\overallwidth}
                {0.5*\morphismheight}}
            \pgfpathlineto{\pgfpoint
                {0.4*\overallwidth}
                {0.5*\morphismheight+\savedlengthne}}
            \pgfusepath{stroke}
        \fi
        \ifconnectsw
            \pgfpathmoveto{\pgfpoint
                {-0.4*\overallwidth}
                {-0.5*\morphismheight}}
            \pgfpathlineto{\pgfpoint
                {-0.4*\overallwidth}
                {-0.5*\morphismheight-\savedlengthsw}}
            \pgfusepath{stroke}
        \fi
        \ifconnectse
            \pgfpathmoveto{\pgfpoint
                {0.4*\overallwidth}
                {-0.5*\morphismheight}}
            \pgfpathlineto{\pgfpoint
                {0.4*\overallwidth}
                {-0.5*\morphismheight-\savedlengthse}}
            \pgfusepath{stroke}
        \fi
        \ifconnectn
            \pgfpathmoveto{\pgfpoint
                {0pt}
                {0.5*\morphismheight}}
            \pgfpathlineto{\pgfpoint
                {0pt}
                {0.5*\morphismheight+\savedlengthn}}
            \pgfusepath{stroke}
        \fi
        \ifconnects
            \pgfpathmoveto{\pgfpoint
                {0pt}
                {-0.5*\morphismheight}}
            \pgfpathlineto{\pgfpoint
                {0pt}
                {-0.5*\morphismheight-\savedlengths}}
            \pgfusepath{stroke}
        \fi
        \ifconnectnwf
            \draw [forward arrow style] (-0.4*\overallwidth,0.5*\morphismheight)
                to (-0.4*\overallwidth,0.5*\morphismheight+\savedlengthnw);
        \fi
        \ifconnectnef
            \draw [forward arrow style] (0.4*\overallwidth,0.5*\morphismheight)
                to (0.4*\overallwidth,0.5*\morphismheight+\savedlengthne);
        \fi
        \ifconnectswf
            \draw [forward arrow style] (-0.4*\overallwidth,-0.5*\morphismheight-\savedlengthsw)
                to (-0.4*\overallwidth,-0.5*\morphismheight);
        \fi
        \ifconnectsef
            \draw [forward arrow style] (0.4*\overallwidth,-0.5*\morphismheight-\savedlengthse)
                to (0.4*\overallwidth,-0.5*\morphismheight);
        \fi
        \ifconnectnf
            \draw [forward arrow style] (0,0.5*\morphismheight)
                to (0,0.5*\morphismheight+\savedlengthn);
        \fi
        \ifconnectsf
            \draw [forward arrow style] (0,-0.5*\morphismheight-\savedlengths)
                to (0,-0.5*\morphismheight);
        \fi
        \ifconnectnwr
            \draw [reverse arrow style] (-0.4*\overallwidth,0.5*\morphismheight)
                to (-0.4*\overallwidth,0.5*\morphismheight+\savedlengthnw);
        \fi
        \ifconnectner
            \draw [reverse arrow style] (0.4*\overallwidth,0.5*\morphismheight)
                to (0.4*\overallwidth,0.5*\morphismheight+\savedlengthne);
        \fi
        \ifconnectswr
            \draw [reverse arrow style] (-0.4*\overallwidth,-0.5*\morphismheight-\savedlengthsw)
                to (-0.4*\overallwidth,-0.5*\morphismheight);
        \fi
        \ifconnectser
            \draw [reverse arrow style] (0.4*\overallwidth,-0.5*\morphismheight-\savedlengthse)
                to (0.4*\overallwidth,-0.5*\morphismheight);
        \fi
        \ifconnectnr
            \draw [reverse arrow style] (0,0.5*\morphismheight)
                to (0,0.5*\morphismheight+\savedlengthn);
        \fi
        \ifconnectsr
            \draw [reverse arrow style] (0,-0.5*\morphismheight-\savedlengths)
                to (0,-0.5*\morphismheight);
        \fi
    }
}
\pgfdeclareshape{swish right}
{
    \savedanchor\centerpoint
    {
        \pgf@x=0pt
        \pgf@y=0pt
    }
    \anchor{center}{\centerpoint}
    \anchorborder{\centerpoint}
    \anchor{north}
    {
        \pgf@x=\minimummorphismwidth
        \divide\pgf@x by 5
        \pgf@y=\morphismheight
        \divide\pgf@y by 2
        \advance\pgf@y by \connectheight
    }
    \anchor{south}
    {
        \pgf@x=-\minimummorphismwidth
        \divide\pgf@x by 5
        \pgf@y=-\morphismheight
        \divide\pgf@y by 2
        \advance\pgf@y by -\connectheight
    }
    \backgroundpath
    {
        \pgfsetstrokecolor{black}
        \pgfsetlinewidth{\thickness}
        \pgfpathmoveto{\pgfpoint
            {-0.2*\minimummorphismwidth}
            {-0.5*\morphismheight-\connectheight}}
        \pgfpathcurveto
            {\pgfpoint{-0.2*\minimummorphismwidth}{0pt}}
            {\pgfpoint{0.2*\minimummorphismwidth}{0pt}}
            {\pgfpoint
                {0.2*\minimummorphismwidth}
                {0.5*\morphismheight+\connectheight}}
        \pgfusepath{stroke}
    }
}
\pgfdeclareshape{swish left}
{
    \savedanchor\centerpoint
    {
        \pgf@x=0pt
        \pgf@y=0pt
    }
    \anchor{center}{\centerpoint}
    \anchorborder{\centerpoint}
    \anchor{north}
    {
        \pgf@x=-\minimummorphismwidth
        \divide\pgf@x by 5
        \pgf@y=\morphismheight
        \divide\pgf@y by 2
        \advance\pgf@y by \connectheight
    }
    \anchor{south}
    {
        \pgf@x=\minimummorphismwidth
        \divide\pgf@x by 5
        \pgf@y=-\morphismheight
        \divide\pgf@y by 2
        \advance\pgf@y by -\connectheight
    }
    \backgroundpath
    {
        \pgfsetstrokecolor{black}
        \pgfsetlinewidth{\thickness}
        \pgfpathmoveto{\pgfpoint
            {0.2*\minimummorphismwidth}
            {-0.5*\morphismheight-\connectheight}}
        \pgfpathcurveto
            {\pgfpoint{0.2*\minimummorphismwidth}{0pt}}
            {\pgfpoint{-0.2*\minimummorphismwidth}{0pt}}
            {\pgfpoint
                {-0.2*\minimummorphismwidth}
                {0.5*\morphismheight+\connectheight}}
        \pgfusepath{stroke}
    }
}
\pgfdeclareshape{state}
{
    \savedanchor\centerpoint
    {
        \pgf@x=0pt
        \pgf@y=0pt
    }
    \anchor{center}{\centerpoint}
    \anchorborder{\centerpoint}
    \saveddimen\overallwidth
    {
        \pgf@x=3\wd\pgfnodeparttextbox
        \ifdim\pgf@x<\minimumstatewidth
            \pgf@x=\minimumstatewidth
        \fi
    }
    \savedanchor{\upperrightcorner}
    {
        \pgf@x=.5\wd\pgfnodeparttextbox
        \pgf@y=.5\ht\pgfnodeparttextbox
        \advance\pgf@y by -.5\dp\pgfnodeparttextbox
    }
    \anchor{A}
    {
        \pgf@x=-\overallwidth
        \divide\pgf@x by 4
        \pgf@y=0pt
    }
    \anchor{B}
    {
        \pgf@x=\overallwidth
        \divide\pgf@x by 4
        \pgf@y=0pt
    }
    \anchor{text}
    {
        \upperrightcorner
        \pgf@x=-\pgf@x
        \ifhflip
            \pgf@y=-\pgf@y
            \advance\pgf@y by 0.4\stateheight
        \else
            \pgf@y=-\pgf@y
            \advance\pgf@y by -0.4\stateheight
        \fi
    }
    \backgroundpath
    {
%        \begin{pgfonlayer}{foreground}
        \pgfsetstrokecolor{black}
        \pgfsetlinewidth{\thickness}
        \pgfpathmoveto{\pgfpoint{-0.5*\overallwidth}{0}}
        \pgfpathlineto{\pgfpoint{0.5*\overallwidth}{0}}
        \ifhflip
            \pgfpathlineto{\pgfpoint{0}{\stateheight}}
        \else
            \pgfpathlineto{\pgfpoint{0}{-\stateheight}}
        \fi
        \pgfpathclose
        \ifblack
            \pgfsetfillcolor{black!50}
            \pgfusepath{fill,stroke}
        \else
            \pgfusepath{stroke}
        \fi
%        \end{pgfonlayer}
    }
}
\makeatother

% Little pictures
\tikzstyle{dotpic}=[scale=0.5]
\tikzstyle{diredge}=[->]
\tikzstyle{none}=[inner sep=0mm]
\newcommand{\pantsalg}{%
\,\begin{tikzpicture}[dotpic,scale=0.8]
		\node [style=none] (0) at (-0.75, -0.5) {};
		\node [style=none] (1) at (0.25, 0.5) {};
		\node [style=none] (2) at (0.75, -0.5) {};
		\node [style=none] (3) at (0.25, -0.5) {};
		\node [style=none] (4) at (-0.25, 0.5) {};
		\node [style=none] (5) at (-0.25, -0.5) {};
		\draw [style=diredge, in=-90, out=90] (2.center) to (1.center);
		\draw [style=diredge, in=90, out=-90] (4.center) to (0.center);
		\draw [style=diredge, in=90, out=90, looseness=3.00] (5.center) to (3.center);
\end{tikzpicture}\,}

\newcommand{\pantsunit}{%
\,\begin{tikzpicture}[dotpic,scale=0.8]
		\node [style=none] (3) at (0.25, 0.5) {};
		\node [style=none] (5) at (-0.25, 0.5) {};
		\draw [style=diredge, in=-90, out=-90, looseness=3.00] (5.center) to (3.center);
\end{tikzpicture}\,}

\newcommand{\tinycomult}[1][dot]{
\smash{{\hspace{-5pt}\ensuremath{\begin{pic}[scale=0.4,string]
    \node (0) at (0,0) {};
    \node[#1, inner sep=1.5pt] (1) at (0,0.55) {};
    \node (2) at (-0.5,1) {};
    \node (3) at (0.5,1) {};
    \draw (0.center) to (1.center);
    \draw (1.center) to [out=left, in=down, out looseness=1.5] (2.center);
    \draw (1.center) to [out=right, in=down, out looseness=1.5] (3.center);
\end{pic}
}\hspace{-3pt}}}}
\newcommand{\tinycounit}[1][dot]{
\smash{{\ensuremath{\hspace{-3pt}\begin{pic}[scale=0.4,string]
        \node (0) at (0,0) {};
        \node (1) at (0,1) {};
        \node[#1, inner sep=1.5pt] (d) at (0,0.55) {};
        \draw (0.center) to (d.center);
    \end{pic}
    \hspace{-1pt}}}}}
\newcommand{\tinymult}[1][dot]{
\smash{{\hspace{-5pt}\ensuremath{\begin{pic}[scale=0.4,string,yscale=-1]
    \node (0) at (0,0) {};
    \node[#1, inner sep=1.5pt] (1) at (0,0.55) {};
    \node (2) at (-0.5,1) {};
    \node (3) at (0.5,1) {};
    \draw (0.center) to (1.center);
    \draw (1.center) to [out=left, in=down, out looseness=1.5] (2.center);
    \draw (1.center) to [out=right, in=down, out looseness=1.5] (3.center);
\end{pic}
}\hspace{-3pt}}}}
\newcommand{\tinyunit}[1][dot]{
\smash{{\ensuremath{\hspace{-3pt}\begin{pic}[scale=0.4,string,yscale=-1]
        \node (0) at (0,0) {};
        \node (1) at (0,1) {};
        \node[#1, inner sep=1.5pt] (d) at (0,0.55) {};
        \draw (0.center) to (d.center);
    \end{pic}
    \hspace{-1pt}}}}}
\newcommand{\tinydot}[1][dot]{
\smash{{\ensuremath{\hspace{-1pt}\begin{pic}[scale=0.4,string,yscale=-1]
        \node[#1, inner sep=1.5pt] (d) at (0,0) {};
    \end{pic}
    }}}}
\newcommand{\tinyid}{\raisebox{-2pt}{\ensuremath{\hspace{-4pt}\begin{pic}[scale=0.4,string]
        \node (0) at (0,0) {};
        \node (1) at (0,1) {};
        \draw[string] (0.center) to (1.center);
     \end{pic}
     \hspace{-2pt}}}}
\newcommand{\tinyhandle}[1][dot]{\raisebox{-2pt}{\ensuremath{\hspace{-1pt}\begin{pic}[scale=0.4,string]
        \node (0) at (0,-0.05) {};
        \node[#1, inner sep=1.0pt] (1) at (0,0.25) {};
        \node[#1, inner sep=1.0pt] (2) at (0,0.75) {};
        \node (3) at (0,1.05) {};
        \draw (0.center) to (1.center);
        \draw (2.center) to (3.center);
        \draw[in=180, out=180, looseness=2] (1.center) to (2.center);
        \draw[in=0, out=0, looseness=2] (1.center) to (2.center);
\end{pic}\hspace{-1pt}}}}

\newcommand{\whiteunit}{\tinyunit[white dot]}
\newcommand{\grayunit}{\tinyunit[gray dot]}
\newcommand{\dotmult}[1]{%
\,\begin{tikzpicture}[dotpic]
	\node [#1] (a) {};
	\draw (a) -- (90:0.55);
	\draw (a) (-45:0.6) -- (a);
	\draw (a) (-135:0.6) -- (a);
\end{tikzpicture}\,}

\newcommand{\prodmult}[2]{\dotmult{#1}\!\!\!\!\dotmult{#2}}

\makeatletter
\newcommand{\fixed@sra}{$\vrule height 2\fontdimen22\textfont2 width 0pt\Rightarrow$}
\newcommand{\Arrow}[1]{%
  \mathrel{\text{\rotatebox[origin=c]{\numexpr#1*45}{\fixed@sra}}}
}
\makeatother